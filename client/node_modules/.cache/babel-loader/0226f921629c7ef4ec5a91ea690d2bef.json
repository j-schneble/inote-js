{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Desktop/Application-Project/client/src/components/notes/EditNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditNote(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [note, setNote] = useState({\n    title: '',\n    content: '',\n    date: '',\n    id: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    const getNote = async () => {\n      const token = localStorage.getItem('tokenStore');\n\n      if (match.params.id) {\n        const res = await axios.get('/api/notes/${match.params.id}', {\n          headers: {\n            Authorization: token\n          }\n        });\n        setNote({\n          title: res.data.title,\n          content: res.data.content,\n          date: new Date(res.data.date).toLocaleDataString(),\n          id: res.data._id\n        });\n      }\n    };\n\n    getNote();\n  }, [match.params.id]);\n\n  const onChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNote({ ...note,\n      [name]: value\n    });\n  };\n\n  const editNote = async e => {\n    e.preventDefault();\n\n    try {\n      const token = localStorage.getItem('tokenStore');\n\n      if (token) {\n        const {\n          title,\n          content,\n          date,\n          id\n        } = note;\n        const newNote = {\n          title,\n          content,\n          date\n        };\n        await axios.put('/api/notes/${id}', newNote, {\n          headers: {\n            Authorization: token\n          }\n        });\n        return history.push('/');\n      }\n    } catch (err) {\n      window.location.href = \"/\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-note\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmite: editNote,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: note.title,\n          id: \"title\",\n          name: \"title\",\n          required: true,\n          onChanges: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: note.content,\n          id: \"content\",\n          name: \"content\",\n          required: true,\n          rows: \"10\",\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: [\"Date: \", note.date, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditNote, \"71qLj/dLZ1BKqjhlKETNDNjLStw=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"sources":["/Users/jack/Desktop/Application-Project/client/src/components/notes/EditNote.js"],"names":["React","useState","useEffect","axios","useHistory","EditNote","match","note","setNote","title","content","date","id","history","getNote","token","localStorage","getItem","params","res","get","headers","Authorization","data","Date","toLocaleDataString","_id","onChangeInput","e","name","value","target","editNote","preventDefault","newNote","put","push","err","window","location","href"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\n\nexport default function EditNote({match}) {\n    const [note, setNote] = useState({\n        title: '',\n        content: '',\n        date: '',\n        id: '',\n    })\n    const history = useHistory()\n\n    useEffect(() =>{\n        const getNote = async () =>{\n            const token = localStorage.getItem('tokenStore')\n            if(match.params.id){\n                const res = await axios.get('/api/notes/${match.params.id}' , {\n                    headers: {Authorization: token}\n                })\n                setNote({\n                    title: res.data.title,\n                    content: res.data.content,\n                    date: new Date(res.data.date).toLocaleDataString(),\n                    id: res.data._id\n                })\n            }\n        }\n        getNote()\n    },[match.params.id])\n\n    const onChangeInput = e => {\n        const {name, value} = e.target;\n        setNote({...note, [name]: value})\n    }\n\n    const editNote = async e => {\n        e.preventDefault()\n        try {\n            const token = localStorage.getItem('tokenStore')\n            if(token){\n                const {title, content, date, id} = note;\n                const newNote = {\n                    title, content, date\n                }\n\n                await axios.put('/api/notes/${id}', newNote, {\n                    headers: {Authorization: token}\n                })\n\n                return history.push('/')\n            }\n        } catch (err) {\n            window.location.href = \"/\";\n        }\n    }\n    return (\n        <div className=\"create-note\">\n           <h2>Edit Note</h2>\n           <form onSubmite={editNote} autoComplete=\"off\">\n                <div className=\"row\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" value={note.title} id=\"title\"\n                    name=\"title\" required onChanges={onChangeInput} />\n                </div>\n\n                <div className=\"row\">\n                    <label htmlFor=\"content\">Content</label>\n                    <textarea  type=\"text\" value={note.content} id=\"content\"\n                    name=\"content\" required rows=\"10\" onChange={onChangeInput} />\n                </div>\n\n                <label htmlFor=\"date\">Date: {note.date} </label>\n                <div className=\"row\">\n                    <input type=\"date\" id=\"date\"\n                    name=\"date\" onChange={onChangeInput} />\n                </div>\n\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}